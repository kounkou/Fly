#ifndef __BUY_ME_H__
#define __BUY_ME_H__

#include "buyme/includes/task.h"
#include <QObject>
#include <QQuickView>
#include <QQuickItem>
#include <QQmlContext>

namespace bm {

class BuyMe : public QObject
{
    Q_OBJECT

signals:
    /////////////////////////////////////////////////////
    void taskIdChanged();

public:
    /////////////////////////////////////////////////////
    /// @brief constructor
    /////////////////////////////////////////////////////
    BuyMe(QObject *parent = 0);

    /////////////////////////////////////////////////////
    /// @brief destructor
    /////////////////////////////////////////////////////
    virtual ~BuyMe();

public:
    /////////////////////////////////////////////////////
    /// @brief method to initialize the Graphical User Interface
    /////////////////////////////////////////////////////
    void initInterface();

private:
    /////////////////////////////////////////////////////
    /// @brief This is the view for the application, it
    /////////////////////////////////////////////////////
    QQuickView* _view;

    /////////////////////////////////////////////////////
    /// \brief The item represents the C++ bridge between the QML Item
    ///        and the C++ equivalent to be able to communicate between
    ///        both the worlds.
    /////////////////////////////////////////////////////
    QQuickItem* _item;

    /////////////////////////////////////////////////////
    /// \brief _credentials is our backend class
    /////////////////////////////////////////////////////
    Task* _task;

    /////////////////////////////////////////////////////
    /// \brief _taskId
    /////////////////////////////////////////////////////
    QString _taskId;
};
}

#endif // __BUY_ME_H__
